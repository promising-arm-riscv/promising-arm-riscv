thread0:
  mov x9, xzr
  cbz x2, .LBB1_13
  mov x10, xzr
  orr w8, wzr, #0x1
  orr x11, xzr, #0xfffffffffffffffe
.LBB1_2:
  ldr x13, [x1, #160]
  add x10, x10, #1
  cmp x13, #9
  b.hi .LBB1_8
  adds x12, x1, x13, lsl #4
  add x14, x13, #1
  str x14, [x1, #160]
  b.eq .LBB1_8
  str x8, [x12]
  ldr x14, [x0]
  add x13, x1, x13, lsl #4
  str x14, [x13, #8]
.LBB1_5:
  ldxr x13, [x0]
  cmp x13, x14
  b.ne .LBB1_9
  stlxr w13, x12, [x0]
  cbnz w13, .LBB1_5
  orr w12, wzr, #0x1
  b .LBB1_10
.LBB1_8:
  orr x12, xzr, #0xfffffffffffffffd
  b .LBB1_11
.LBB1_9:
  clrex
  mov w12, wzr
.LBB1_10:
  cmp w12, #0
  csel x12, xzr, x11, ne
.LBB1_11:
  cmp x12, #0
  cset w12, eq
  csel x13, x8, xzr, eq
  cmp x10, x2
  add x9, x13, x9
  lsl x8, x8, x12
  b.ne .LBB1_2
  str x9, [x5]
  mov x9, xzr
  cbnz x3, .LBB1_14
  b .LBB1_23
.LBB1_13:
  orr w8, wzr, #0x1
  str x9, [x5]
  mov x9, xzr
  cbz x3, .LBB1_23
.LBB1_14:
  mov x10, xzr
.LBB1_15:
  ldar x12, [x0]
  add x10, x10, #1
  cbz x12, .LBB1_22
  ldr x11, [x12]
  ldr x13, [x12, #8]
.LBB1_17:
  ldxr x14, [x0]
  cmp x14, x12
  b.ne .LBB1_20
  stlxr w14, x13, [x0]
  cbnz w14, .LBB1_17
  orr w12, wzr, #0x1
  b .LBB1_21
.LBB1_20:
  clrex
  mov w12, wzr
.LBB1_21:
  cmp w12, #0
  csel x11, x11, xzr, ne
  add x9, x11, x9
.LBB1_22:
  cmp x10, x3
  b.ne .LBB1_15
.LBB1_23:
  str x9, [x6]
  mov x9, xzr
  cbz x4, .LBB1_35
  mov x10, xzr
  orr x11, xzr, #0xfffffffffffffffe
.LBB1_25:
  ldr x13, [x1, #160]
  add x10, x10, #1
  cmp x13, #9
  b.hi .LBB1_31
  adds x12, x1, x13, lsl #4
  add x14, x13, #1
  str x14, [x1, #160]
  b.eq .LBB1_31
  str x8, [x12]
  ldr x14, [x0]
  add x13, x1, x13, lsl #4
  str x14, [x13, #8]
.LBB1_28:
  ldxr x13, [x0]
  cmp x13, x14
  b.ne .LBB1_32
  stlxr w13, x12, [x0]
  cbnz w13, .LBB1_28
  orr w12, wzr, #0x1
  b .LBB1_33
.LBB1_31:
  orr x12, xzr, #0xfffffffffffffffd
  b .LBB1_34
.LBB1_32:
  clrex
  mov w12, wzr
.LBB1_33:
  cmp w12, #0
  csel x12, xzr, x11, ne
.LBB1_34:
  cmp x12, #0
  cset w12, eq
  csel x13, x8, xzr, eq
  cmp x10, x4
  add x9, x13, x9
  lsl x8, x8, x12
  b.ne .LBB1_25
.LBB1_35:
  str x9, [x7]
  ret
thread1:
  mov x9, xzr
  cbz x2, .LBB1_13
  mov x10, xzr
  orr w8, wzr, #0x1
  orr x11, xzr, #0xfffffffffffffffe
.LBB1_2:
  ldr x13, [x1, #160]
  add x10, x10, #1
  cmp x13, #9
  b.hi .LBB1_8
  adds x12, x1, x13, lsl #4
  add x14, x13, #1
  str x14, [x1, #160]
  b.eq .LBB1_8
  str x8, [x12]
  ldr x14, [x0]
  add x13, x1, x13, lsl #4
  str x14, [x13, #8]
.LBB1_5:
  ldxr x13, [x0]
  cmp x13, x14
  b.ne .LBB1_9
  stlxr w13, x12, [x0]
  cbnz w13, .LBB1_5
  orr w12, wzr, #0x1
  b .LBB1_10
.LBB1_8:
  orr x12, xzr, #0xfffffffffffffffd
  b .LBB1_11
.LBB1_9:
  clrex
  mov w12, wzr
.LBB1_10:
  cmp w12, #0
  csel x12, xzr, x11, ne
.LBB1_11:
  cmp x12, #0
  cset w12, eq
  csel x13, x8, xzr, eq
  cmp x10, x2
  add x9, x13, x9
  lsl x8, x8, x12
  b.ne .LBB1_2
  str x9, [x5]
  mov x9, xzr
  cbnz x3, .LBB1_14
  b .LBB1_23
.LBB1_13:
  orr w8, wzr, #0x1
  str x9, [x5]
  mov x9, xzr
  cbz x3, .LBB1_23
.LBB1_14:
  mov x10, xzr
.LBB1_15:
  ldar x12, [x0]
  add x10, x10, #1
  cbz x12, .LBB1_22
  ldr x11, [x12]
  ldr x13, [x12, #8]
.LBB1_17:
  ldxr x14, [x0]
  cmp x14, x12
  b.ne .LBB1_20
  stlxr w14, x13, [x0]
  cbnz w14, .LBB1_17
  orr w12, wzr, #0x1
  b .LBB1_21
.LBB1_20:
  clrex
  mov w12, wzr
.LBB1_21:
  cmp w12, #0
  csel x11, x11, xzr, ne
  add x9, x11, x9
.LBB1_22:
  cmp x10, x3
  b.ne .LBB1_15
.LBB1_23:
  str x9, [x6]
  mov x9, xzr
  cbz x4, .LBB1_35
  mov x10, xzr
  orr x11, xzr, #0xfffffffffffffffe
.LBB1_25:
  ldr x13, [x1, #160]
  add x10, x10, #1
  cmp x13, #9
  b.hi .LBB1_31
  adds x12, x1, x13, lsl #4
  add x14, x13, #1
  str x14, [x1, #160]
  b.eq .LBB1_31
  str x8, [x12]
  ldr x14, [x0]
  add x13, x1, x13, lsl #4
  str x14, [x13, #8]
.LBB1_28:
  ldxr x13, [x0]
  cmp x13, x14
  b.ne .LBB1_32
  stlxr w13, x12, [x0]
  cbnz w13, .LBB1_28
  orr w12, wzr, #0x1
  b .LBB1_33
.LBB1_31:
  orr x12, xzr, #0xfffffffffffffffd
  b .LBB1_34
.LBB1_32:
  clrex
  mov w12, wzr
.LBB1_33:
  cmp w12, #0
  csel x12, xzr, x11, ne
.LBB1_34:
  cmp x12, #0
  cset w12, eq
  csel x13, x8, xzr, eq
  cmp x10, x4
  add x9, x13, x9
  lsl x8, x8, x12
  b.ne .LBB1_25
.LBB1_35:
  str x9, [x7]
  ret
thread2:
  mov x9, xzr
  cbz x2, .LBB1_13
  mov x10, xzr
  orr w8, wzr, #0x1
  orr x11, xzr, #0xfffffffffffffffe
.LBB1_2:
  ldr x13, [x1, #160]
  add x10, x10, #1
  cmp x13, #9
  b.hi .LBB1_8
  adds x12, x1, x13, lsl #4
  add x14, x13, #1
  str x14, [x1, #160]
  b.eq .LBB1_8
  str x8, [x12]
  ldr x14, [x0]
  add x13, x1, x13, lsl #4
  str x14, [x13, #8]
.LBB1_5:
  ldxr x13, [x0]
  cmp x13, x14
  b.ne .LBB1_9
  stlxr w13, x12, [x0]
  cbnz w13, .LBB1_5
  orr w12, wzr, #0x1
  b .LBB1_10
.LBB1_8:
  orr x12, xzr, #0xfffffffffffffffd
  b .LBB1_11
.LBB1_9:
  clrex
  mov w12, wzr
.LBB1_10:
  cmp w12, #0
  csel x12, xzr, x11, ne
.LBB1_11:
  cmp x12, #0
  cset w12, eq
  csel x13, x8, xzr, eq
  cmp x10, x2
  add x9, x13, x9
  lsl x8, x8, x12
  b.ne .LBB1_2
  str x9, [x5]
  mov x9, xzr
  cbnz x3, .LBB1_14
  b .LBB1_23
.LBB1_13:
  orr w8, wzr, #0x1
  str x9, [x5]
  mov x9, xzr
  cbz x3, .LBB1_23
.LBB1_14:
  mov x10, xzr
.LBB1_15:
  ldar x12, [x0]
  add x10, x10, #1
  cbz x12, .LBB1_22
  ldr x11, [x12]
  ldr x13, [x12, #8]
.LBB1_17:
  ldxr x14, [x0]
  cmp x14, x12
  b.ne .LBB1_20
  stlxr w14, x13, [x0]
  cbnz w14, .LBB1_17
  orr w12, wzr, #0x1
  b .LBB1_21
.LBB1_20:
  clrex
  mov w12, wzr
.LBB1_21:
  cmp w12, #0
  csel x11, x11, xzr, ne
  add x9, x11, x9
.LBB1_22:
  cmp x10, x3
  b.ne .LBB1_15
.LBB1_23:
  str x9, [x6]
  mov x9, xzr
  cbz x4, .LBB1_35
  mov x10, xzr
  orr x11, xzr, #0xfffffffffffffffe
.LBB1_25:
  ldr x13, [x1, #160]
  add x10, x10, #1
  cmp x13, #9
  b.hi .LBB1_31
  adds x12, x1, x13, lsl #4
  add x14, x13, #1
  str x14, [x1, #160]
  b.eq .LBB1_31
  str x8, [x12]
  ldr x14, [x0]
  add x13, x1, x13, lsl #4
  str x14, [x13, #8]
.LBB1_28:
  ldxr x13, [x0]
  cmp x13, x14
  b.ne .LBB1_32
  stlxr w13, x12, [x0]
  cbnz w13, .LBB1_28
  orr w12, wzr, #0x1
  b .LBB1_33
.LBB1_31:
  orr x12, xzr, #0xfffffffffffffffd
  b .LBB1_34
.LBB1_32:
  clrex
  mov w12, wzr
.LBB1_33:
  cmp w12, #0
  csel x12, xzr, x11, ne
.LBB1_34:
  cmp x12, #0
  cset w12, eq
  csel x13, x8, xzr, eq
  cmp x10, x4
  add x9, x13, x9
  lsl x8, x8, x12
  b.ne .LBB1_25
.LBB1_35:
  str x9, [x7]
  ret
